'use client';

import React, { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import { Prompt } from '@/types';
import { usePromptStore } from '@/store/usePromptStore';
import PromptForm from '@/components/ui/PromptForm';
import WebhookDisplay from '@/components/ui/WebhookDisplay';
import LoadingIndicator from '@/components/shared/LoadingIndicator';

interface ClientPromptRunnerProps {
  promptId: string;
}

// This is a client component that receives promptId as a prop
const ClientPromptRunner: React.FC<ClientPromptRunnerProps> = ({ promptId }) => {
  const router = useRouter();
  const { getPrompt } = usePromptStore();
  const [prompt, setPrompt] = useState<Prompt | null>(null);
  const [loading, setLoading] = useState(true);
  
  useEffect(() => {
    // Load the prompt
    const foundPrompt = getPrompt(promptId);
    
    if (foundPrompt) {
      setPrompt(foundPrompt);
    }
    
    setLoading(false);
  }, [promptId, getPrompt]);
  
  const handleReturn = () => {
    router.push('/');
  };
  
  if (loading) {
    return (
      <div className="flex justify-center items-center py-16">
        <LoadingIndicator size="lg" />
      </div>
    );
  }
  
  if (!prompt) {
    return (
      <div className="text-center py-16">
        <h2 className="text-xl font-semibold text-gray-800 mb-2">
          Prompt Not Found
        </h2>
        <p className="text-gray-600 mb-6">
          The prompt you're looking for doesn't exist or has been removed.
        </p>
        <button
          onClick={handleReturn}
          className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition"
        >
          Back to Prompts
        </button>
      </div>
    );
  }
  
  return (
    <div className="space-y-6">
      <PromptForm 
        prompt={prompt} 
        onReturn={handleReturn} 
      />
      
      <WebhookDisplay 
        promptId={prompt.id} 
      />
    </div>
  );
};

export default ClientPromptRunner;
