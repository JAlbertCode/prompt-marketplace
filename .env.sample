# Production Environment Configuration Sample
# Copy this file to .env.local for local development or .env for production

# ==========================================
# APPLICATION SETTINGS
# ==========================================
NODE_ENV=production
NEXT_PUBLIC_PRODUCT_NAME=PromptFlow
NEXT_PUBLIC_URL=https://promptflow.io
NEXT_PUBLIC_APP_VERSION=1.0.0

# ==========================================
# BUILD SETTINGS
# ==========================================
# Set to 'true' to bypass TypeScript checks during build (use for CI/CD only)
SKIP_TS_DURING_BUILD=false
# Set to 'true' to bypass ESLint checks during build (use for CI/CD only)
SKIP_ESLINT_DURING_BUILD=false

# ==========================================
# DATABASE CONFIGURATION
# ==========================================
# Production: Use connection pooling with SSL
DATABASE_URL="postgresql://username:password@hostname:5432/promptflow?sslmode=require&connection_limit=10&pool_timeout=30&idle_timeout=600"

# Database Fallback Mode
# Used during outages or maintenance windows
USE_DB_FALLBACK=false
USE_LOCAL_STORAGE=false

# ==========================================
# AUTHENTICATION
# ==========================================
# NextAuth Configuration (use `openssl rand -base64 32` to generate a secret)
NEXTAUTH_URL=https://promptflow.io
NEXTAUTH_SECRET=REPLACE_WITH_SECURE_SECRET

# OAuth Providers
GITHUB_ID=your_github_oauth_id
GITHUB_SECRET=your_github_oauth_secret
GOOGLE_CLIENT_ID=your_google_oauth_id
GOOGLE_CLIENT_SECRET=your_google_oauth_secret

# Security Tokens
AUTH_TOKEN=REPLACE_WITH_SECURE_TOKEN
JWT_SECRET=REPLACE_WITH_SECURE_SECRET
ACCESS_PASSWORD=REPLACE_WITH_SECURE_PASSWORD

# ==========================================
# EMAIL CONFIGURATION (Brevo/SendInBlue)
# ==========================================
BREVO_API_KEY=your_brevo_api_key_here

# Brevo List IDs
BREVO_WAITLIST_LIST_ID=3

# Brevo Email Templates
BREVO_TEMPLATE_WAITLIST_WELCOME=1
BREVO_TEMPLATE_WAITLIST_LAUNCH=2
BREVO_TEMPLATE_USER_WELCOME=3
BREVO_TEMPLATE_CREDIT_PURCHASE=4

# ==========================================
# MODEL API KEYS
# ==========================================
# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_ORG_ID=optional_organization_id

# Sonar Configuration
SONAR_API_KEY=your_sonar_api_key_here

# ==========================================
# PAYMENT PROCESSING (Stripe)
# ==========================================
# Production keys should be different from test keys
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_live_your_publishable_key
STRIPE_SECRET_KEY=sk_live_your_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Stripe Product IDs (Create in Stripe Dashboard)
STRIPE_PRODUCT_ID_STARTER=prod_your_starter_product_id
STRIPE_PRODUCT_ID_BASIC=prod_your_basic_product_id
STRIPE_PRODUCT_ID_PRO=prod_your_pro_product_id
STRIPE_PRODUCT_ID_BUSINESS=prod_your_business_product_id
STRIPE_PRODUCT_ID_ENTERPRISE=prod_your_enterprise_product_id

# ==========================================
# MONITORING & LOGGING
# ==========================================
# Enable detailed logging in production
ENABLE_API_LOGGING=true
LOG_LEVEL=error

# Example for Sentry integration (if needed)
# SENTRY_DSN=your_sentry_dsn
# SENTRY_ENVIRONMENT=production

# ==========================================
# RATE LIMITING
# ==========================================
# API Rate Limiting
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60 # Seconds

# ==========================================
# REDIS CONFIGURATION
# ==========================================
# Rate limiting and caching with Upstash Redis
# Get these from your Upstash Redis dashboard
UPSTASH_REDIS_REST_URL=https://your-instance.upstash.io
UPSTASH_REDIS_REST_TOKEN=your_upstash_redis_token

# ==========================================
# CACHING
# ==========================================
CACHE_TTL=3600 # 1 hour in seconds
ENABLE_REDIS_CACHE=true